{"version":3,"sources":["modules/contact.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","newSearch","handleSearchChange","type","value","onChange","PersonForm","handleSubmit","newName","handleNameChange","newNum","handleNumChange","onSubmit","Persons","persons","onClick","rows","filter","p","name","toUpperCase","indexOf","map","i","key","toString","Rows","num","Notification","message","className","App","useState","setPersons","setNewName","setNewNum","setNewSearch","notif","setNotif","notifType","setNotifType","useEffect","contactService","initialNotes","launchNotification","setTimeout","e","target","preventDefault","contact","find","window","confirm","newContact","updatedNote","catch","error","newID","Math","max","x","returnedNote","concat","props","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60be542e.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n\r\n}\r\nconst deleteContact = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n\r\n}\r\nexport default { getAll, create, update, deleteContact }","import React, { useState, useEffect } from 'react'\r\nimport contactService from './modules/contact'\r\n\r\nconst App = () => {\r\n\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNum, setNewNum] = useState('')\r\n    const [newSearch, setNewSearch] = useState('')\r\n    const [notif, setNotif] = useState('')\r\n    const [notifType, setNotifType] = useState('')\r\n\r\n    useEffect(() => {\r\n        contactService\r\n            .getAll()\r\n            .then(initialNotes => setPersons(initialNotes))\r\n\r\n    }, [])\r\n\r\n    const handleNameChange = e => {\r\n        setNewName(e.target.value)\r\n    }\r\n    const handleNumChange = e => {\r\n        setNewNum(e.target.value)\r\n    }\r\n    const handleSearchChange = e => {\r\n        setNewSearch(e.target.value)\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        const contact = persons.find(p => p.name.toUpperCase() === newName.toUpperCase())\r\n        if (contact) {\r\n\r\n            const result = window.confirm(`${newName} is already in the phone book, replace the old number with the new one?`);\r\n            if (!result) return;\r\n\r\n            const newContact = { ...contact, num: newNum }\r\n\r\n            contactService\r\n                .update(contact.id, newContact)\r\n                .then(updatedNote => {\r\n                    setPersons(persons.map(p => p.id !== contact.id ? p : updatedNote))\r\n                    launchNotification('success', `Contact info successfully updated`)\r\n                    setNewName('')\r\n                    setNewNum('')\r\n                })\r\n                .catch(error => {\r\n                    launchNotification('error', `${contact.name} not found`)\r\n                })\r\n\r\n        } else {\r\n            const newID = Math.max(...persons.map(x => x.id)) + 1\r\n\r\n            const newPerson = { name: newName, num: newNum, id: newID }\r\n            contactService\r\n                .create(newPerson)\r\n                .then(returnedNote => {\r\n                    setPersons(persons.concat(returnedNote))\r\n                    launchNotification('success', 'Contact successfully added to the phonebook')\r\n                    setNewName('')\r\n                    setNewNum('')\r\n                }).catch(error => {\r\n                    launchNotification('error', error.response.data.error)\r\n                })\r\n        }\r\n\r\n    }\r\n    const handleDeleteClick = props => {\r\n        const message = `Delete ${persons.find(p => p.id === props).name} ?`\r\n        if (!window.confirm(message)) return;\r\n\r\n        contactService\r\n            .deleteContact(props)\r\n            .then(x => {\r\n                setPersons(persons.filter(p => p.id !== props))\r\n                launchNotification('success', 'Contact successfully deleted from the phonebook')\r\n            })\r\n    }\r\n\r\n    const launchNotification = (type, message) => {\r\n        setNotifType(type)\r\n        setNotif(message)\r\n        if (type === 'success') setTimeout(() => setNotif(''), 3224)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification type={notifType} message={notif} />\r\n            <Filter newSearch={newSearch} handleSearchChange={handleSearchChange} />\r\n            <h3>Add new person</h3>\r\n            <PersonForm handleSubmit={handleSubmit}\r\n                newName={newName} handleNameChange={handleNameChange}\r\n                newNum={newNum} handleNumChange={handleNumChange} />\r\n            <h3>Numbers</h3>\r\n            <Persons persons={persons} newSearch={newSearch} onClick={handleDeleteClick} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Filter = ({ newSearch, handleSearchChange }) => <div>Filter:<input type=\"text\" value={newSearch} onChange={handleSearchChange} /> </div>\r\nconst PersonForm = ({ handleSubmit, newName, handleNameChange, newNum, handleNumChange }) => (\r\n    < form onSubmit={handleSubmit} >\r\n        <div>\r\n            Name: <input type=\"text\" value={newName} onChange={handleNameChange} />\r\n        </div>\r\n        <div>\r\n            Number: <input type=\"tel\" value={newNum} onChange={handleNumChange} />\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">add</button>\r\n        </div>\r\n    </form >)\r\n\r\nconst Persons = ({ persons, newSearch, onClick }) => {\r\n    const personsFiltered = persons.filter(p => p.name.toUpperCase().indexOf(newSearch.toUpperCase()) !== -1)\r\n    const rows = personsFiltered.map((p, i) => <Rows p={p} onClick={onClick} key={p.name + i.toString()} />)\r\n    return (\r\n        <ul>\r\n            {rows}\r\n        </ul>\r\n    )\r\n}\r\nconst Rows = ({ p, onClick }) => <li>{p.name} {p.num ? ': ' + p.num : ''} <button onClick={() => onClick(p.id)}>Delete</button> </li>\r\n\r\n\r\nconst Notification = ({ type, message }) => {\r\n    if (!message) return null\r\n    return (\r\n        <div className={type === 'error' ? 'error' : 'success'}> {message}</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}